# Generated by Django 3.0.4 on 2020-03-27 15:35

import bitfield.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Monitoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tested', models.BooleanField(blank=True, default=False, verbose_name='Já foi testado')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Data')),
                ('suspect', models.BooleanField(default=False, verbose_name='Suspeito de COVID-19')),
                ('virus_exposure', bitfield.models.BitField([('confirmed_cases', 'Contato com casos confirmados'), ('suspect_cases', 'Contato com casos suspeitos'), ('foreign', 'Contato com pessoas que estiveram em locais com casos confirmados')], blank=True, default=0, verbose_name='Exposição COVID-19')),
                ('result', models.CharField(choices=[('SR', 'Sem resposta'), ('PO', 'Positivo'), ('NE', 'Negativo')], default='SR', max_length=2, verbose_name='Resultado do exame')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Nome completo')),
                ('mother_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Nome da mãe')),
                ('birth_date', models.DateField(blank=True, default='', validators=[validators.prevent_future_date], verbose_name='Data de nascimento')),
                ('cns', models.CharField(blank=True, default='000000000000000', max_length=15, verbose_name='Cartão do SUS')),
                ('id_document', models.CharField(blank=True, default='000000000', max_length=9, verbose_name='RG')),
                ('cpf', models.CharField(blank=True, default='00000000000', max_length=11, validators=[validators.validate_cpf], verbose_name='CPF')),
                ('phone_number', models.CharField(blank=True, default='', max_length=11, verbose_name='Número de telefone')),
                ('gender', models.CharField(blank=True, choices=[('F', 'Feminino'), ('M', 'Masculino'), ('N', 'Não quer declarar')], default='', max_length=1, verbose_name='Sexo biológico')),
                ('age', models.PositiveIntegerField(blank=True, verbose_name='Idade')),
                ('weight', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Peso')),
                ('height', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Altura')),
                ('smoker', models.BooleanField(blank=True, default=False, verbose_name='Fumante')),
                ('vaccinated', models.BooleanField(blank=True, default=False, verbose_name='Tomou vacina da gripe em 2020')),
                ('oxygen', models.BooleanField(blank=True, default=False, verbose_name='Precisou de oxigênio recentemente')),
                ('comorbidities', bitfield.models.BitField([('Y', 'Artrite reumatóide'), ('A', 'Asma'), ('C', 'Bronquite crônica'), ('N', 'Câncer'), ('E', 'Demência'), ('D', 'Diabetes'), ('H', 'Doença cardíacas'), ('L', 'Doença crônica no fígado'), ('R', 'Doença renal crônica'), ('W', 'Doenças reumáticas'), ('P', 'Doença pulmonar crônica'), ('I', 'Imunosuprimido'), ('T', 'Hipertensão'), ('V', 'HIV+'), ('B', 'Obesidade'), ('U', 'Portador de Lúpus')], default=0, verbose_name='Comorbidades')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date', models.DateField(blank=True, default=None, null=True, validators=[validators.prevent_future_date], verbose_name='Ida')),
                ('return_date', models.DateField(blank=True, default=None, null=True, validators=[validators.prevent_future_date], verbose_name='Volta')),
                ('country', models.CharField(choices=[('CHN', 'China'), ('BRA', 'Brasil'), ('ESP', 'Espanha'), ('USA', 'Estados Unidos'), ('ITA', 'Itália')], default='', max_length=3, verbose_name='País')),
                ('profile', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='monitoring.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom', models.CharField(choices=[('CA', 'Cansaço'), ('CN', 'Congestão nasal'), ('DI', 'Diarreia'), ('SB', 'Dificuldade respiratória'), ('ST', 'Dor de garganta'), ('DC', 'Dor de cabeça'), ('AP', 'Dores no corpo'), ('FA', 'Falta de apetite'), ('FV', 'Febre'), ('RN', 'Nariz escorrendo'), ('NA', 'Náusea'), ('TP', 'Tosse produtiva'), ('TS', 'Tosse seca'), ('VO', 'Vômitos')], default='', max_length=2, verbose_name='Tipo de sintoma')),
                ('intensity', models.CharField(blank=True, choices=[('', 'Não apresenta'), ('L', 'Leve'), ('M', 'Moderada'), ('H', 'Grave')], default='L', max_length=1, verbose_name='Intensidade')),
                ('onset', models.DateField(blank=True, null=True, validators=[validators.prevent_future_date], verbose_name='Data do surgimento')),
                ('monitoring', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='monitoring.Monitoring')),
            ],
        ),
        migrations.AddField(
            model_name='monitoring',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.Profile'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('HM', 'Residencial'), ('WK', 'Trabalho'), ('OT', 'Outro')], default='', max_length=2, verbose_name='Tipo')),
                ('postal_code', models.CharField(blank=True, default='', max_length=8, verbose_name='CEP')),
                ('neighbourhood', models.CharField(blank=True, default='', max_length=100, verbose_name='Bairro')),
                ('street_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Logradouro')),
                ('number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, default='', max_length=100, verbose_name='Complemento')),
                ('city', models.CharField(blank=True, default='', max_length=100, verbose_name='Cidade')),
                ('people', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Quantidade de pessoas')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.Profile')),
            ],
        ),
    ]
